 1）方法一，使用 ${}表达式
格式：${变量名:起始位置:长度}
 子串替换的两种用法：
只替换第一个匹配结果：${变量名/old/new}
替换全部匹配结果：${变量名//old/new}

  变量=${变量:-123456}   变量无值使用123456
  echo ${变量%关键字*}     删除变量关键字以及其后所有

基本正在则
  ^开始
  $结尾
  [ ] 集合,取集合中任意单个字符     [ ^]对集合内的关键字取反 ^[^a-z] 匹配不是小写字母开头的行
  [ ^] 对集合取反
  * 前一个字符出现任意次(包含0次,不允许单独使用)
  . 任意单个字符
  \{n\} 匹配前一个字符n次
  \{n,\} 匹配前一个字符>=n次
  \{n,m\} 匹配前一个字符n到m次
    \(\)  保留

扩展正则:
  + 一次或以上
  ? 0或1次
 { n,m} 匹配n到m次  (ab){3}   ab连续出现3次的ababab     (ab){2,4} ab连续出现2-4次 abab ababab abababab
  ()分组引用整体,保留   ab*匹配   ab abb abbb  (ab)*匹配 ab abab ababab
  | 或者  (test|taste)  表示找的test或者taste 
  \b关键子\b  查找关键字其开头结尾不能有其他(\b单词边界)

基本正则兼容性强(所有支持正则的软件都支持基本正则)
扩展正则兼容性差(不是每个软件都支持扩展正则grep不支持扩展正则,需使用egrep或者grep -E)
